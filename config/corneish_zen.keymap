#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _DEFAULT 0
#define _GAME 1
#define _NAVI 2
#define _SYMBOL 3
#define _NUMBER 4
#define _MOUSE 5
#define _MEDIA 6
#define _ADJUST 7

#define TAPPING_TERM 150
#define QUICK_TAP 200

/* Key index
 0  1  2  3  4         5  6  7  8  9
10 11 12 13 14        15 16 17 18 19
20 21 22 23 24        25 26 27 28 29
        30 31 32    33 34 35         */

/ {
    combos {
        compatible = "zmk,combos";
        // Umlauts; requires EUR keymap
        combo_uauml {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp RA(LS(A))>;
        };
        combo_uouml {
            timeout-ms = <50>;
            key-positions = <0 2>;
            bindings = <&kp RA(LS(O))>;
        };
        combo_uuuml {
            timeout-ms = <50>;
            key-positions = <0 3>;
            bindings = <&kp RA(LS(U))>;
        };
        combo_lauml {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp RA(A)>;
        };
        combo_louml {
            timeout-ms = <50>;
            key-positions = <20 22>;
            bindings = <&kp RA(O)>;
        };
        combo_luuml {
            timeout-ms = <50>;
            key-positions = <20 23>;
            bindings = <&kp RA(U)>;
        };
        combo_lsuml {
            timeout-ms = <50>;
            key-positions = <20 24>;
            bindings = <&kp RA(S)>;
        };
    };
};

&lt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <21>;
        };
    };
};

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
                        bindings = <
   &kp Q      &kp W      &kp E       &kp R       &kp T        &kp Y    &kp U        &kp I        &kp O      &kp P
   &kp A      &kp S      &kp D       &kp F       &kp G        &kp H    &kp J        &kp K        &kp L      &kp SQT
   &kp Z      &kp X      &kp C       &kp V       &kp B        &kp N    &kp M        &kp COMMA    &kp DOT    &kp FSLH
              &mo _NAVI       &kp LSHFT       &lt _MOUSE TAB  &lt _MEDIA RET   &kp SPC          &mo _SYMBOL
                        >;
                };

                game_layer {
                        label = "GAME";
                        bindings = <
   &kp Q      &kp W      &kp E       &kp R       &kp T   &kp Y &kp U        &kp I        &kp O      &kp P
   &mt LGUI A &mt LALT S &mt LCTRL D &mt LSHFT F &kp G   &kp H &mt LSHFT J  &mt LCTRL K  &mt LALT L &mt LGUI SQT
   &kp Z      &kp X      &kp C       &kp V       &kp B   &kp N &kp M        &kp COMMA    &kp DOT    &kp FSLH
              &kp LGUI   &mo 1       &kp SPACE           &kp RET            &mo 2        &kp RALT
                        >;
                };

                navi_layer {
                        label = "NAVI";
                        bindings = <
   &sk RGUI   &sk RALT   &sk RCTRL   &sk RSHFT   &kp RGUI     &kp TAB     &kp ESC      &swapper    &none      &caps_word
   &sk LGUI   &sk LALT   &sk LCTRL   &sk LSHFT   &kp LGUI     &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT  &kp ENTER
   &kp LC(Z)  &kp LC(X)  &kp LC(C)   &kp LC(V)   &kp DEL      &kp HOME    &kp PG_DN    &kp PG_UP   &kp END    &kp INS
              &trans     &none       &none                          &none        &kp BSPC    &mo _NUMBER
                        >;
                };

                symbol_layer {
                        label = "SYMBOL";
                        bindings = <
   &kp EXCL   &kp AT    &kp HASH   &kp DLLR    &kp PRCNT  &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR
   &none      &kp LBRC  &kp LBKT   &kp LPAR    &kp GRAVE  &kp TILDE &kp MINUS &kp PLUS  &kp EQUAL &none
   &kp PIPE   &kp RBRC  &kp RBKT   &kp RPAR    &none      &none     &kp UNDER &kp SEMI  &kp COLON &kp BSLH
              &mo _NUMBER  &mo _ADJUST  &trans            &none     &none     &trans
                        >;
                };

                number_layer {
                        label = "NUMBER";
                        bindings = <
   &kp N1     &kp N2    &kp N3    &kp N4       &kp N5     &kp N6    &kp N7    &kp N8    &kp N9    &kp N0
   &sk LGUI   &sk LALT  &sk LCTRL &sk LSHFT    &kp MINUS  &kp PLUS  &sk LSHFT &sk LCTRL &sk LALT  &sk LGUI
   &none      &none     &none     &none        &none      &none     &none     &kp COMMA &kp DOT   &none
              &trans    &none     &none                             &none     &none     &trans
                        >;
                };

                mouse_layer {
                        label = "MOUSE";
                        bindings = <
   &none      &none      &none       &none       &none      &none  &none        &none        &none      &none
   &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT   &none      &none  &none        &none        &none      &none
   &none      &none      &none       &none       &none      &none  &none        &none        &none      &none
              &trans     &trans      &trans                        &trans       &trans       &trans
                        >;
                };

                media_layer {
                        label = "MEDIA";
                        bindings = <
   &none      &none      &none       &none       &none      &none       &none         &none         &none          &none
   &kp LGUI   &kp LALT   &kp LCTRL   &kp LSHFT   &none      &none       &kp K_PP      &kp K_STOP2   &kp K_PREV     &kp K_NEXT
   &none      &none      &none       &none       &none      &none       &kp K_VOL_DN  &kp K_MUTE    &kp K_VOL_UP   &none
              &none      &none       &none                              &trans        &none         &none
                        >;
                };

                adjust_layer {
                        label = "ADJUST";
                        bindings = <
   &kp F1      &kp F2       &kp F3          &kp F4      &kp F5           &kp F6      &kp F7        &kp F8        &kp F9        &kp F10
   &kp F11     &kp F12      &kp PAUSE_BREAK &kp PSCRN   &kp SLCK         &none       &none         &none         &none         &none
   &bootloader &none        &none           &none       &none            &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
              &none     &trans      &none                                    &none         &none         &trans
                        >;
                };

        };
};
